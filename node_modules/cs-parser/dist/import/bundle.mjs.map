{"version":3,"file":"bundle.mjs","sources":["../../src/ContextManager.js","../../src/Composite.js","../../src/ResultSet.js","../../src/Context.js","../../src/Rule.js","../../src/Parser.js","../../src/main.js"],"sourcesContent":["/**\n * A ContextManager can control multiple contexts through the entire parsing\n */\nclass ContextManager {\n\t/**\n\t * @param {Context} Cx The root context to manage\n\t */\n\tconstructor(Cx) {\n\t\tCx.manager = this\n\t\tthis._root = Cx\n\t\tthis._current = null\n\t\tthis._history = []\n\t\tthis._buffer = null\n\t}\n\n\t/**\n\t * The root context\n\t * @type {Context}\n\t * @readonly\n\t */\n\tget root() {\n\t\treturn this._root\n\t}\n\n\t/**\n\t * The current active context\n\t * @type {Context}\n\t */\n\tget current() {\n\t\treturn this._current\n\t}\n\n\tset current(X) {\n\t\tif (X && !this._history.includes(X)) {\n\t\t\tif (this._history.length)\n\t\t\t\tX.prev = this._history[this._history.length - 1]\n\t\t\tthis._history.push(X)\n\t\t}\n\t\tthis._current = X\n\t}\n\n\t/**\n\t * An array of contexts which have ever been activated\n\t * @type {Context[]}\n\t * @readonly\n\t */\n\tget history() {\n\t\treturn this._history\n\t}\n\n\tset buffer(X) {\n\t\tthis._buffer = X\n\t}\n\n\t/**\n\t * Feeds a buffer to all the appropriate contexts\n\t * depending on the current context\n\t * @param {Buffer} Bf\n\t */\n\tfeed(Bf) {\n\t\tif (this._buffer && this._buffer.length) {\n\t\t\tlet bf = this._buffer\n\t\t\tthis._buffer = null\n\t\t\tthis.feed(bf)\n\t\t}\n\t\tif (Bf.length == 1) {\n\t\t\tthis._current.step(Bf)\n\t\t\tthis._root.updateState(true)\n\t\t\treturn\n\t\t}\n\t\tif (!Bf.length) throw new Error(`Empty buffer`)\n\t\tfor (let byte of Bf) {\n\t\t\tlet hx = byte.toString(16)\n\t\t\tif (hx.length == 1) hx = '0' + hx // Zero padding\n\t\t\tthis.feed(Buffer.from(hx, 'hex'))\n\t\t}\n\t}\n}\n\nexport default ContextManager\n","/**\n * The base class which provides the implementation of the Composite design pattern.\n * A composite object can form a tree-like structure, the nodes or leaves of which are also composites\n */\nclass Composite {\n\tconstructor() {\n\t\tthis._parent = null\n\t\tthis._children = []\n\t}\n\n\t/**\n\t * Whether this has parent composite\n\t * @type {boolean}\n\t * @readonly\n\t */\n\tget hasParent() {\n\t\treturn this._parent != null\n\t}\n\n\t/**\n\t * Whether this has one or more child composites\n\t * @type {boolean}\n\t * @readonly\n\t */\n\tget hasChild() {\n\t\treturn this._children.length > 0\n\t}\n\n\t/**\n\t * The parent composite\n\t * @type {Composite}\n\t * @readonly\n\t */\n\tget parent() {\n\t\treturn this._parent\n\t}\n\n\t/**\n\t * The ancestor composites ordered by closest to furthest\n\t * @type {Composite[]}\n\t * @readonly\n\t */\n\tget ancestors() {\n\t\tlet r = []\n\t\tlet item = this\n\t\twhile (item.hasParent) {\n\t\t\titem = item._parent\n\t\t\tr.push(item)\n\t\t}\n\t\treturn r\n\t}\n\n\t/**\n\t * The root of composition\n\t * @type {Composite}\n\t * @readonly\n\t */\n\tget root() {\n\t\tlet r = this\n\t\twhile (r.hasParent) r = r._parent\n\t\treturn r\n\t}\n\n\t/**\n\t * The number of child composites\n\t * @type {number}\n\t * @readonly\n\t */\n\tget length() {\n\t\treturn this._children.length\n\t}\n\n\t/**\n\t * Determines whether the specified composite can be added as a child\n\t * @param {Composite} Cp The composite which is about to be added\n\t * @return {boolean|string}\n\t * `true` if `Cp` is valid. Any type other than `true` means invalid.\n\t * If a string is returned, it is shown as an error message in the debug console\n\t */\n\tverifyChild(Cp) {\n\t\treturn true\n\t}\n\n\t/**\n\t * Adds a child composite\n\t * @param {Composite} Cp The composite to add as a child\n\t * @return {Composite} This\n\t */\n\taddChild(Cp) {\n\t\tif (Cp.hasParent) throw new Error('Parent already exists')\n\t\tlet verified = this.verifyChild(Cp)\n\t\tif (verified !== true) {\n\t\t\tconsole.error(typeof verified == 'string' ? verified : 'Invalid child')\n\t\t\treturn this\n\t\t}\n\t\tCp._parent = this\n\t\tthis._children.push(Cp)\n\t\treturn this\n\t}\n\n\t/**\n\t * Adds multiple child composites\n\t * @param {Composite[]} Cps The array of the composites to add\n\t * @return {Composite} This\n\t */\n\taddChildren(Cps) {\n\t\tfor (let item of Cps) this.addChild(item)\n\t\treturn this\n\t}\n\n\t/**\n\t * Performs tree traversal\n\t * @param {function} Fn\n\t * The callback that receives every descendant composite as the 1st parameter.\n\t * If `false` is returned, the traversal will be aborted.\n\t * The returned value other than `false` will be passed to the next traversal call of `Fn` as the 2nd parameter\n\t * @param {number} Depth=-1\n\t * The limit of traversal depth. Negative number means no-limit\n\t * @param {mixed} Arg=null\n\t * Additinal argument to pass to `Fn` as the 2nd parameter.\n\t * @return {boolean}\n\t * `true` if the traversal is successfully completed.\n\t * `false` if the traversal is aborted\n\t */\n\ttraverse(Fn, Depth = -1, Arg = null) {\n\t\tlet r = true\n\t\tlet result = Fn(this, Arg)\n\t\tif (result === false || Depth == 0) return !this.hasChild\n\t\tfor (let item of this._children) {\n\t\t\tif (!item.traverse(Fn, Depth - 1, result) && r) r = false\n\t\t}\n\t\treturn r\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\t[Symbol.iterator]() {\n\t\treturn this._children[Symbol.iterator]()\n\t}\n}\n\nexport default Composite\n","/**\n * A container that stores parse results\n */\nclass ResultSet {\n\tconstructor() {\n\t\tthis._results = []\n\t}\n\n\t/**\n\t * Saves the provided data as a parsing result.\n\t * You can pass an array as multiple results\n\t * @param {mixed|mixed[]|ResultSet} Result The data to add\n\t * @param {boolean} KeepsArray=false\n\t * If `true`, stores the result as a single result even if it is an array\n\t * @return {ResultSet} This\n\t * @chainable\n\t */\n\tadd(Result, KeepsArray = false) {\n\t\tif (Array.isArray(Result) && !KeepsArray) {\n\t\t\tfor (let item of Result) this._results.push(item)\n\t\t} else this._results.push(Result)\n\t\treturn this\n\t}\n\n\t/**\n\t * Performs traversal\n\t * @param {function} Fn\n\t * The callback that receives every single result as the 1st parameter\n\t * @param {mixed} Arg=null\n\t * Additional argument to pass to `Fn` as the 2nd parameter\n\t */\n\ttraverse(Fn, Arg = null) {\n\t\tfor (let item of this._results) {\n\t\t\tif (item instanceof ResultSet) item.traverse(Fn, Arg)\n\t\t\telse Fn(item, Arg)\n\t\t}\n\t}\n}\n\nexport default ResultSet\n","import Composite from './Composite.js'\nimport ResultSet from './ResultSet.js'\n\nconst // Enums for state\n\tSTANDBY    = Symbol('STANDBY'),\n\tACTIVE     = Symbol('ACTIVE'),\n\tBACKGROUND = Symbol('BACKGROUND'),\n\tFINISHED   = Symbol('FINISHED'),\n\tWASTED     = Symbol('WASTED')\n\n/**\n * A parsing context\n * @extends Composite\n */\nclass Context extends Composite {\n\t/**\n\t * @override\n\t * @param {Rule} Rl The rule that determines the behavior of this context\n\t * @param {ContextManager} Manager=null The manager that controls this context\n\t */\n\tconstructor(Rl, Manager = null) {\n\t\tsuper()\n\t\tthis._rule = Rl\n\t\tthis._manager = Manager\n\t\tthis._state = STANDBY\n\t\tthis._nextState = null\n\t\tthis._results = null\n\t\tthis._data = {}\n\t\tthis._buffer = Buffer.alloc(0)\n\t\tthis._prev = null\n\t\tthis._next = null\n\t}\n\n\t/**\n\t * An enum for {@link Context#state}\n\t * which means the context is waiting for being activated\n\t * @type {Symbol}\n\t * @const\n\t */\n\tstatic get STANDBY() {\n\t\treturn STANDBY\n\t}\n\n\t/**\n\t * An enum for {@link Context#state}\n\t * which means the context is active\n\t * @type {Symbol}\n\t * @const\n\t */\n\tstatic get ACTIVE() {\n\t\treturn ACTIVE\n\t}\n\n\t/**\n\t * An enum for {@link Context#state}.\n\t * When a sub-context gets activated, the parent context goes this state\n\t * @type {Symbol}\n\t * @const\n\t */\n\tstatic get BACKGROUND() {\n\t\treturn BACKGROUND\n\t}\n\n\t/**\n\t * An enum for {@link Context#state}\n\t * which means the context has been deactivated\n\t * @type {Symbol}\n\t * @const\n\t */\n\tstatic get FINISHED() {\n\t\treturn FINISHED\n\t}\n\n\t/**\n\t * An enum for {@link Context#state}\n\t * which means the context has no longer chance of getting activated\n\t * @type {Symbol}\n\t * @const\n\t */\n\tstatic get WASTED() {\n\t\treturn WASTED\n\t}\n\n\t/**\n\t * The rule that determines the behavior of this context\n\t * @type {Rule}\n\t * @readonly\n\t */\n\tget rule() {\n\t\treturn this._rule\n\t}\n\n\t/**\n\t * The manager that is controlling this context\n\t * @type {ContextManager}\n\t */\n\tget manager() {\n\t\treturn this._manager || (this.hasParent ? this.parent.manager : null)\n\t}\n\n\tset manager(X) {\n\t\tif (this.hasParent) throw new Error(`Manager of a non-root context cannot be changed`)\n\t\tif (this._manager) throw new Error(`Another manager is already set`)\n\t\tthis._manager = X\n\t}\n\n\t/**\n\t * The current state\n\t * @type {Symbol}\n\t * @default Context.STANDBY\n\t * @readonly\n\t */\n\tget state() {\n\t\treturn this._state\n\t}\n\n\t/**\n\t * The next state which this context is about to change to\n\t * @type {Symbol}\n\t */\n\tget nextState() {\n\t\treturn this._nextState || this._state\n\t}\n\n\tset nextState(X) {\n\t\tthis._nextState = X\n\t}\n\n\t/**\n\t * The parsing results\n\t * @type {ResultSet}\n\t * @readonly\n\t */\n\tget results() {\n\t\treturn this._results\n\t}\n\n\t/**\n\t * The data object\n\t * @type {mixed}\n\t * @default {}\n\t */\n\tget data() {\n\t\treturn this._data\n\t}\n\n\tset data(X) {\n\t\tthis._data = X\n\t}\n\n\t/**\n\t * The previous context\n\t * @type {Context}\n\t */\n\tget prev() {\n\t\treturn this._prev\n\t}\n\n\tset prev(X) {\n\t\tX._next = this\n\t\tthis._prev = X\n\t}\n\n\t/**\n\t * The next context\n\t * @type {Context}\n\t */\n\tget next() {\n\t\treturn this._next\n\t}\n\n\tset next(X) {\n\t\tX._prev = this\n\t\tthis._next = X\n\t}\n\n\t/**\n\t * @override\n\t * @param {Context} Cx The context to verify\n\t */\n\tverifyChild(Cx) {\n\t\tif (Cx._manager && Cx._manager !== this.manager)\n\t\t\tthrow new Error(`Multiple managers conflicted`)\n\t\treturn true\n\t}\n\n\t/**\n\t * Clears internal reading buffer\n\t * @protected\n\t */\n\tclearBuffer() {\n\t\tthis._buffer = Buffer.alloc(0)\n\t}\n\n\t/**\n\t * Populates sub-contexts\n\t * @protected\n\t */\n\tpopulate() {\n\t\tif (this._rule.isRecursive) this.addChild(new Context(this._rule))\n\t\tfor (let item of this._rule) this.addChild(new Context(item))\n\t}\n\n\t/**\n\t * Updates the state\n\t * @param {boolean} Recursive=false Whether or not to perform recursively\n\t */\n\tupdateState(Recursive = false) {\n\t\tif (Recursive) {\n\t\t\tfor (let item of this._children) item.updateState(Recursive)\n\t\t}\n\t\tif (!this._nextState) return\n\t\tthis._state = this._nextState\n\t\tthis._nextState = null\n\n\t\tlet manager = this.manager\n\t\tif (manager && this._state == ACTIVE) manager.current = this\n\t}\n\n\t/**\n\t * Removes all the unnecessary children\n\t * @param {boolean} Recursive=false Whether or not to perform recursively\n\t * @return {Context[]} An array of removed contexts\n\t */\n\tcleanupChildren(Recursive = false) {\n\t\tif (!this.hasChild) return\n\t\tlet children = []\n\t\tlet wasted = []\n\t\tfor (let item of this._children) {\n\t\t\tif (item.state == WASTED) {\n\t\t\t\twasted.push(item)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (Recursive)\n\t\t\t\twasted = wasted.concat(item.cleanupChildren(Recursive))\n\t\t\tchildren.push(item)\n\t\t}\n\t\tthis._children = children\n\t\treturn wasted\n\t}\n\n\t/**\n\t * Pushes a single byte into the internal reading buffer.\n\t * And if the buffer reached at the chunk splitter (default: '\\n'),\n\t * passes the buffer to `parseChunk()`.\n\t * @param {Buffer} Byte The byte to push into the buffer\n\t * @return {boolean}\n\t * `true` if the buffer reached at the chunk splitter.\n\t * Otherwise `false`\n\t */\n\tstep(Byte) {\n\t\tswitch (this.state) {\n\t\tcase STANDBY:\n\t\t\tbreak\n\t\tcase ACTIVE:\n\t\t\tif (\n\t\t\t\tthis._rule.endsWithParent &&\n\t\t\t\tthis.hasParent &&\n\t\t\t\tthis.parent.step(Byte) &&\n\t\t\t\tthis.parent.nextState == FINISHED\n\t\t\t) return true // End with the parent\n\t\t\t// Search a child to activate\n\t\t\tvar found = null\n\t\t\tfor (let item of this._children) {\n\t\t\t\tif (!found && item.step(Byte) && item.nextState == ACTIVE) {\n\t\t\t\t\tfound = item\n\t\t\t\t\tbreak // Stop searching\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (found) {\n\t\t\t\tthis.clearBuffer()\n\t\t\t\tfor (let item of this._children) item.clearBuffer()\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tbreak\n\t\tcase BACKGROUND:\n\t\t\tif (\n\t\t\t\tthis._rule.endsWithParent &&\n\t\t\t\tthis.hasParent &&\n\t\t\t\tthis.parent.step(Byte) &&\n\t\t\t\tthis.parent.nextState == FINISHED\n\t\t\t) return true // End with the parent\n\t\t\tbreak\n\t\tdefault:\n\t\t\treturn false\n\t\t}\n\t\treturn this._step(Byte)\n\t}\n\n\t/**\n\t * @private\n\t * @return {boolean}\n\t */\n\t_step(Byte) {\n\t\tthis._buffer = Buffer.concat([this._buffer, Byte])\n\t\tlet chunks = this._buffer.toString(this._rule.encoding)\n\t\t\t.split(this._rule.splitter)\n\t\tif (chunks.length < 2) return false\n\t\tif (chunks.length > 2) throw new Error(`Something is going wrong..`)\n\t\tthis.parseChunk(chunks[0])\n\t\tthis.clearBuffer()\n\t\treturn true\n\t}\n\n\t/**\n\t * Applies the rule to a chunk\n\t * @param {string} Chunk Chunk to apply the rule\n\t */\n\tparseChunk(Chunk) {\n\t\tlet manager = this.manager\n\n\t\tswitch (this._state) {\n\t\tcase STANDBY:\n\t\t\tvar starts = this._rule.startsWith(Chunk)\n\t\t\tif (starts || starts === 0) { // Starts\n\t\t\t\tif (!this.start(Chunk, starts)) manager.buffer = this._buffer\n\t\t\t}\n\t\t\tbreak\n\t\tcase ACTIVE:\n\t\t\tvar ends = this._rule.endsWith(Chunk)\n\t\t\tif (ends || ends === 0) { // Ends\n\t\t\t\tif (!this.end(Chunk, ends)) manager.buffer = this._buffer\n\t\t\t} else if (!this._rule.parse(this, Chunk))\n\t\t\t\tmanager.buffer = this._buffer\n\t\t\tbreak\n\t\tcase BACKGROUND:\n\t\t\tvar ends = this._rule.endsWith(Chunk)\n\t\t\tif (ends || ends === 0) { // Ends\n\t\t\t\tif (!this.end(Chunk, ends)) manager.buffer = this._buffer\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\t/**\n\t * Activates this context\n\t */\n\tstart(Chunk = null, Arg = null) {\n\t\tif (this._state == ACTIVE) {\n\t\t\tconsole.warn('Already active')\n\t\t\treturn false\n\t\t}\n\t\tthis.nextState = ACTIVE\n\t\tthis._results = new ResultSet()\n\t\tif (this.hasParent) {\n\t\t\tthis.parent.nextState = BACKGROUND\n\t\t\tthis.parent.results.add(this._results)\n\t\t}\n\t\tthis.populate()\n\t\treturn this._rule.init(this, Chunk, Arg)\n\t}\n\n\t/**\n\t * Deactivates this context\n\t */\n\tend(Chunk = null, Arg = null) {\n\t\tif (this._state == FINISHED) {\n\t\t\tconsole.warn('Already finished')\n\t\t\treturn false\n\t\t}\n\t\t// End all the sub-contexts\n\t\tfor (let item of this._children) {\n\t\t\tif (item.state == FINISHED) continue\n\t\t\titem.end()\n\t\t}\n\t\tswitch (this._state) {\n\t\tcase STANDBY:\n\t\t\tthis.nextState = WASTED\n\t\t\tbreak\n\t\tcase ACTIVE:\n\t\tcase BACKGROUND:\n\t\t\tthis.nextState = FINISHED\n\t\t\tif (this.hasParent) {\n\t\t\t\t// The parent comes back to active\n\t\t\t\tthis.parent.nextState = ACTIVE\n\t\t\t\tthis.parent.addChild(new Context(this._rule))\n\t\t\t}\n\t\t\treturn this._rule.fin(this, Chunk, Arg)\n\t\t}\n\t\treturn false\n\t}\n\n\t/**\n\t * Returns the outlined string for debug\n\t * @param {string} Indent=2-spaces The indentation string\n\t * @param {number} Level=0 The indentation level\n\t * @return {string} The outlined string\n\t */\n\toutline(Indent = '  ', Level = 0) {\n\t\tlet r = Indent.repeat(Level) + this._rule.express(this)\n\t\tfor (let item of this._children)\n\t\t\tr += '\\n' + item.outline(Indent, Level + 1)\n\t\treturn r\n\t}\n}\n\nexport default Context\n","import Composite from './Composite.js'\n\nconst INHERIT = Symbol('INHERIT')\n\n/**\n * A nestable parsing rule\n * @extends Composite\n */\nclass Rule extends Composite {\n\t/**\n\t * Creates a rule instance with the options in the specified object.\n\t * @param {object} Df=null\n\t * The rule definition object that contains the options as its properties.\n\t * Definition objects can be **nested**.\n\t * A nested definition is interpreted as a **sub-rule**.\n\t * The property name for a nested definition must start with `$` (dollar sign)\n\t *\n\t * ###### Available Options:\n\t * @param {string} Df.name\n\t * The name of this rule. Only for debug purpose\n\t * @param {string|RegExp} Df.from\n\t * The pattern that indicates the begining point of this rule.\n\t * If the current chunk matched with this pattern,\n\t * this rule will be activated, and the new context will start parsing\n\t * from the next chunk\n\t * @param Df.start\n\t * Alias of `from`\n\t * @param {string|RegExp} Df.to\n\t * The pattern that indicates the end point of this rule.\n\t * If the current chunk matched with this pattern,\n\t * this rule will be deactivated, and the current context will be finalized\n\t * @param Df.end Alias of `to`\n\t *\n\t * @param {function} Df.onStart\n\t * The callback which is called when this rule gets activated.<br>\n\t * If this returns `false`, the {@link Parser} will read the current chunk\n\t * again\n\t * ###### Parameters:\n\t * @param {Context} Df.onStart.cx The current context\n\t * @param {string} Df.onStart.chunk\n\t * The current chunk which has matched with `from`\n\t * @param {number|string[]} Df.onStart.matches\n\t * If the `from` pattern is a string, the index of the matched string\n\t * in the chunk.<br>\n\t * If the `from` pattern is a RegExp, the regex matching results array\n\t * @param Df.init Alias of `onStart`\n\t *\n\t * @param {function} Df.onActive\n\t * The callback which is called for every single chunk.<br>\n\t * If this returns `false`, the {@link Parser} will read the current chunk\n\t * again\n\t * ###### Parameters:\n\t * @param {Context} Df.onActive.cx The current context\n\t * @param {string} Df.onActive.chunk The current chunk\n\t * @param Df.parse Alias of `onActive`\n\t *\n\t * @param {function} Df.onEnd\n\t * The callback which is called when this rule gets deactivated.\n\t * If this returns `false`, the {@link Parser} will read the current chunk\n\t * again\n\t * ###### Parameters:\n\t * @param {Context} Df.onEnd.cx The current context\n\t * @param {string} Df.onEnd.chunk\n\t * The current chunk which has matched with `to`\n\t * @param {number|string[]} Df.onEnd.matches\n\t * If the `to` pattern is a string, the index of the matched string\n\t * in the chunk.<br>\n\t * If the `to` pattern is a RegExp, the regex matching results array\n\t * @param Df.fin Alias of `onEnd`\n\t *\n\t * @param {function} Df.onOutline\n\t * **Debug purpose only.**\n\t * You can customize the output of {@link Context#outline}\n\t * with this callback\n\t * ###### Must Return:\n\t * The output `string`\n\t * ###### Parameters:\n\t * @param {Context} Df.onOutline.cx The context to express\n\t * @param Df.express Alias of `onOutline`\n\t *\n\t * @param {object} Df.on\n\t * The container for the another aliases of\n\t * `onStart`, `onActive`, `onEnd`, `onOutline`\n\t * ###### Properties:\n\t * @param {function} Df.on.start Alias of `onStart`\n\t * @param {function} Df.on.active Alias of `onActive`\n\t * @param {function} Df.on.end Alias of `onEnd`\n\t * @param {function} Df.on.outline Alias of `onOutline`\n\t *\n\t * @param {boolean} Df.isRecursive=false Whether this rule is recursive\n\t * @param Df.recursive Alias of `isRecursive`\n\t * @param Df.recurse Alias of `isRecursive`\n\t * @param {boolean} Df.endsWithParent=false\n\t * If `true`, the parent rule can end even when this rule is active\n\t * @param {string|RegExp} Df.splitter='\\n'\n\t * The chunk splitter. When the {@link Parser} reached at\n\t * the chunk splitter, the substring from the previous chunk splitter\n\t * is passed to the rule as a chunk. The default splitter is a line-break\n\t * @param {string} Df.encoding=Rule.INHERIT\n\t * The encoding to use for converting the buffer to a chunk string.\n\t * Falls back to `'utf8'`\n\t * @param {object} Df.$any\n\t * A sub-rule definition. The property name can be any string\n\t * but must start with `$` (dollar sign)\n\t */\n\tconstructor(Df = null) {\n\t\tsuper()\n\t\tif (!Df) Df = {}\n\t\tthis._name = Df.name || null\n\t\tthis._from = Df.from || Df.start || null\n\t\tthis._to = Df.to || Df.end || null\n\t\tthis._isRecursive = Df.isRecursive || Df.recursive || Df.recurse || null\n\t\tthis._endsWithParent = Df.endsWithParent || null\n\t\tthis._splitter = Df.splitter || null\n\t\tthis._encoding = Df.encoding || INHERIT\n\t\tthis._onStart   = Df.onStart   || (Df.on && Df.on.start)   || Df.init    || null\n\t\tthis._onActive  = Df.onActive  || (Df.on && Df.on.active)  || Df.parse   || null\n\t\tthis._onEnd     = Df.onEnd     || (Df.on && Df.on.end)     || Df.fin     || null\n\t\tthis._onOutline = Df.onOutline || (Df.on && Df.on.outline) || Df.express || null\n\n\t\t// Sub rules\n\t\tfor (let i in Df) {\n\t\t\tif (!Df[i]) continue\n\t\t\tlet m = i.match(/^\\$(.*)$/)\n\t\t\tif (!m) continue\n\t\t\tif (!Df[i].name && m[1]) Df[i].name = m[1]\n\t\t\tthis.addChild(new Rule(Df[i]))\n\t\t}\n\t}\n\n\t/**\n\t * The enum for rule properties,\n\t * which means the actual property value inherits from the parent rule\n\t * @type {Symbol}\n\t * @const\n\t */\n\tstatic get INHERIT() {\n\t\treturn INHERIT\n\t}\n\n\t/**\n\t * The name of this rule\n\t * @type {string}\n\t * @default ''\n\t */\n\tget name() {\n\t\treturn this.get('_name', '')\n\t}\n\n\tset name(X) {\n\t\tthis.set('_name', X)\n\t}\n\n\t/**\n\t * The start pattern\n\t * @type {RegExp}\n\t * @default null\n\t */\n\tget from() {\n\t\treturn this.get('_from', null)\n\t}\n\n\tset from(X) {\n\t\tthis.set('_from', X)\n\t}\n\n\t/**\n\t * The start pattern\n\t * @deprecated Use {@link Rule#from} instead\n\t * @type {RegExp}\n\t * @default null\n\t */\n\tget start() {\n\t\tconsole.warn(`rule.start is deprecated. Use rule.from instead`)\n\t\treturn this.from\n\t}\n\n\tset start(X) {\n\t\tconsole.warn(`rule.start is deprecated. Use rule.from instead`)\n\t\tthis.from = X\n\t}\n\n\t/**\n\t * The end pattern\n\t * @type {RegExp}\n\t * @default null\n\t */\n\tget to() {\n\t\treturn this.get('_to', null)\n\t}\n\n\tset to(X) {\n\t\tthis.set('_to', X)\n\t}\n\n\t/**\n\t * The end pattern\n\t * @deprecated Use {@link Rule#to} instead\n\t * @type {RegExp}\n\t * @default null\n\t */\n\tget end() {\n\t\tconsole.warn(`rule.end is deprecated. Use rule.to instead`)\n\t\treturn this.to\n\t}\n\n\tset end(X) {\n\t\tconsole.warn(`rule.end is deprecated. Use rule.to instead`)\n\t\tthis.to = X\n\t}\n\n\t/**\n\t * The event handler which is called when this rule is activated\n\t * @type {function}\n\t * @default null\n\t */\n\tget onStart() {\n\t\treturn this.get('_onStart', null)\n\t}\n\n\tset onStart(X) {\n\t\tthis.set('_onStart', X)\n\t}\n\n\t/**\n\t * The event handler which is called every time\n\t * the parser reached at {@link Rule#splitter}\n\t * @type {function}\n\t * @default null\n\t */\n\tget onActive() {\n\t\treturn this.get('_onActive', null)\n\t}\n\n\tset onActive(X) {\n\t\tthis.set('_onActive', X)\n\t}\n\t/**\n\t * The event handler which is called when this rule is deactivated\n\t * @type {function}\n\t * @default null\n\t */\n\tget onEnd() {\n\t\treturn this.get('_onEnd', null)\n\t}\n\n\tset onEnd(X) {\n\t\tthis.set('_onEnd', X)\n\t}\n\n\t/**\n\t * **Debug purpose only.**\n\t * The callback which runs when {@link Context#outline} is called\n\t * @type {function}\n\t * @default null\n\t */\n\tget onOutline() {\n\t\treturn this.get('_onOutline', null)\n\t}\n\n\tset onOutline(X) {\n\t\tthis.set('_onOutline', X)\n\t}\n\n\t/**\n\t * Whether this rule is recursive\n\t * @type {boolean}\n\t * @default false\n\t */\n\tget isRecursive() {\n\t\treturn this.get('_isRecursive', false)\n\t}\n\n\tset isRecursive(X) {\n\t\tthis.set('_isRecursive', X)\n\t}\n\n\t/**\n\t * Whether the current context can also be ended by the parent context rule\n\t * @type {boolean}\n\t * @default false\n\t */\n\tget endsWithParent() {\n\t\treturn this.get('_endsWithParent', false)\n\t}\n\n\tset endsWithParent(X) {\n\t\tthis.set('_endsWithParent', X)\n\t}\n\n\t/**\n\t * The chunk splitter\n\t * @type {string|RegExp}\n\t * @default '\\n'\n\t */\n\tget splitter() {\n\t\treturn this.get('_splitter', '\\n')\n\t}\n\n\tset splitter(X) {\n\t\tthis.set('_splitter', X)\n\t}\n\n\t/**\n\t * The encoding to decode buffers. Falls back to `'utf8'`\n\t * @type {string}\n\t * @default Rule.INHERIT\n\t */\n\tget encoding() {\n\t\treturn this.get('_encoding', 'utf8')\n\t}\n\n\tset encoding(X) {\n\t\tthis.set('_encoding', X)\n\t}\n\n\t/**\n\t * @param {string} Name The name of the property to get\n\t * @param {mixed} Fallback The value which the property falls back to\n\t * @param {boolean} Inherits=true Whether or not to inherit the parent's value\n\t * @return {mixed}\n\t * @private\n\t */\n\tget(Name, Fallback, Inherits = true) {\n\t\tlet prop = this[Name]\n\t\treturn Inherits && prop == INHERIT ? (\n\t\t\tthis.hasParent ?\n\t\t\tthis.parent.get(Name, Fallback, Inherits) : Fallback\n\t\t) : (prop == null ? Fallback : prop)\n\t}\n\n\t/**\n\t * @param {string} Name The name of the property to set\n\t * @param {mixed} Value The value to set to the property\n\t * @private\n\t */\n\tset(Name, Value) {\n\t\tif (this[Name] != null)\n\t\t\tthrow new Error(`The property cannot be changed`)\n\t\tthis[Name] = Value\n\t}\n\n\t/**\n\t * Performs matching the specified chunk with the start pattern\n\t * @param {string} Chunk The chunk to match\n\t * @return {mixed} The matching result\n\t */\n\tstartsWith(Chunk) {\n\t\treturn Rule.checkEnclosure(Chunk, this.from)\n\t}\n\n\t/**\n\t * Performs matching the specified chunk with the end pattern\n\t * @param {string} Chunk The chunk to match\n\t * @return {mixed} The matching result\n\t */\n\tendsWith(Chunk) {\n\t\treturn Rule.checkEnclosure(Chunk, this.to)\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} Chunk\n\t * @param {boolean|string|function|RegExp|mixed[]} Cond Condition\n\t * @return {mixed}\n\t */\n\tstatic checkEnclosure(Chunk, Cond) {\n\t\tif (!Cond) return false\n\t\tswitch (typeof Cond) {\n\t\tcase 'boolean':\n\t\t\treturn true\n\t\tcase 'string':\n\t\t\tlet idx = Chunk.indexOf(Cond)\n\t\t\treturn idx < 0 ? false : idx\n\t\tcase 'function':\n\t\t\treturn Cond(Chunk)\n\t\t}\n\t\tif (Cond instanceof RegExp) return Chunk.match(Cond)\n\t\tif (Array.isArray(Cond)) {\n\t\t\tfor (let item of Cond) {\n\t\t\t\tlet r = Rule.checkEnclosure(Chunk, item)\n\t\t\t\tif (r) return r\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\t/**\n\t * Sets an event handler\n\t * @param {string} Ev\n\t * The event identifier\n\t * ###### Available Events:\n\t * + `'start'`: Occurs when the current chunk matched with {@link Rule#from}\n\t * + `'active'`: While this rule is active, occurs every time the parser reached at {@link Rule#splitter}\n\t * + `'end'`: Occurs when the current chunk matched with {@link Rule#to}\n\t * + `'outline'`: Occurs when {@link Context#outline} is called. **Debug purpose only**\n\t * @param {function} Fn\n\t * The event handler.\n\t * Returning `false` makes the parser read the current chunk again\n\t * ###### Parameters:\n\t * @param {Context} Fn.cx The current context\n\t * @param {string} Fn.chunk\n\t * The current chunk.<br>\n\t * **Only for `start`, `active` and `end`**\n\t * @param {number|string[]} Fn.matches\n\t * The matching result of {@link Rule#from}/{@link Rule#to}.<br>\n\t * **Only for `start` and `end` events**\n\t */\n\ton(Ev, Fn) {\n\t\tswitch (Ev) {\n\t\tcase 'start':\n\t\tcase 'active':\n\t\tcase 'end':\n\t\tcase 'outline':\n\t\t\tthis.set('_on' + Ev[0].toUpperCase() + Ev.slice(1), Fn)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error('No such event')\n\t\t}\n\t}\n\n\t/**\n\t * Initializes a context\n\t * @param {Context} Cx The context to initialize\n\t * @param {string} Chunk='' The chunk that matched with the `start` condition\n\t * @param {string[]} MatchResult=null The matching result of the `start` condition\n\t * @return {boolean}\n\t * The result of `init` callback.\n\t * If `init` is not specified, `true` will be returned\n\t */\n\tinit(Cx, Chunk = '', MatchResult = null) {\n\t\tlet r = true // Goes next chunk\n\t\tif (this.onStart) {\n\t\t\tr = this.onStart(Cx, Chunk, MatchResult)\n\t\t\tif (typeof r == 'undefined') r = true\n\t\t}\n\t\treturn r\n\t}\n\n\t/**\n\t * Finalizes a context\n\t * @param {Context} Cx The context to finalize\n\t * @param {string} Chunk='' The chunk that matched with the `end` condition\n\t * @param {string[]} MatchResult=null The maching result of the `end` condition\n\t * @return {boolean}\n\t * Result of `fin` callback.\n\t * If `fin` is not specified, `true` will be returned\n\t */\n\tfin(Cx, Chunk = '', MatchResult = null) {\n\t\tlet r = true // Goes next chunk\n\t\tif (this.onEnd) {\n\t\t\tr = this.onEnd(Cx, Chunk, MatchResult)\n\t\t\tif (typeof r == 'undefined') r = true\n\t\t}\n\t\treturn r\n\t}\n\n\t/**\n\t * Parses a chunk\n\t * @param {Context} Cx The current context\n\t * @param {string} Chunk='' The chunk to parse\n\t * @return {boolean}\n\t * The result of `parse` callback.\n\t * If `parse` is not specified, `true` will be returned\n\t */\n\tparse(Cx, Chunk = '') {\n\t\tlet r = true // Goes next chunk\n\t\tif (this.onActive) {\n\t\t\tr = this.onActive(Cx, Chunk)\n\t\t\tif (typeof r == 'undefined') r = true\n\t\t}\n\t\treturn r\n\t}\n\n\t/**\n\t * Expresses a context. **Debug purpose only.**\n\t * @param {Context} Cx The context to express\n\t * @return {string}\n\t */\n\texpress(Cx) {\n\t\treturn this.onOutline ? this.onOutline(Cx) : (this.name || 'anonymous')\n\t}\n}\n\nexport default Rule\n","import ContextManager from './ContextManager.js'\nimport Context from './Context.js'\nimport Rule from './Rule.js'\nimport fs from 'node:fs';\n\n/**\n * Context sensitive parser\n */\nclass Parser {\n\t/**\n\t * @param {object|Rule} Rl=null The root rule\n\t */\n\tconstructor(Rl = null) {\n\t\tlet rule = Rl instanceof Rule ? Rl : new Rule(Rl)\n\t\tthis._rule = rule.from ? new Rule().addChild(rule) : rule\n\t\tif (!this._rule.name) this._rule.name = 'root'\n\t\tthis._cm = null\n\t}\n\n\t/**\n\t * Adds a new rule\n\t * @param {object|Rule} Rl The rule to add\n\t * @return {Rule} The `Rule` object which has peen added\n\t */\n\taddRule(Rl) {\n\t\tlet rule = Rl instanceof Rule ? Rl : new Rule(Rl)\n\t\tthis._rule.addChild(rule)\n\t\treturn rule\n\t}\n\n\t/**\n\t * Adds multiple new rules\n\t * @param {object[]|Rule[]} Rls An array of the rules to add\n\t * @return {Rule[]} An array of `Rule` objects which have been added\n\t */\n\taddRules(Rls) {\n\t\tlet rules = []\n\t\tfor (let item of Rls) rules.push(this.addRule(item))\n\t\treturn rules\n\t}\n\n\t/**\n\t * Parses the data specified as a string or Buffer.\n\t * After the parsing completed, returns the root context which contains\n\t * all the generated sub-contexts through the entire parsing\n\t * @param {string|Buffer} Data The data to be parsed\n\t * @return {Context} The root context\n\t */\n\tparse(Data) {\n\t\tlet cx = new Context(this._rule)\n\t\tthis.onStart(cx)\n\t\tthis._cm.feed(Data instanceof Buffer ? Data : Buffer.from(Data))\n\t\tthis.onComplete(cx)\n\t\treturn cx\n\t}\n\n\t/**\n\t * Parses a file asynchronously\n\t * @param {string} Url The file URL\n\t * @param {object} Opt Streaming options\n\t * @see https://nodejs.org/api/fs.html#fs_fs_createreadstream_path_options\n\t * @return {Promise}\n\t * A Promise that will resolve when the parsing completes.\n\t * You can get the root context as the 1st parameter of a callback\n\t * which you can pass to `.then()`\n\t */\n\tparseFile(Url, Opt = null) {\n\t\tlet cx = null\n\t\tlet io = fs.createReadStream(Url, Object.assign(Opt || {}, {\n\t\t\thighWaterMark: 1\n\t\t}))\n\t\tio.on('open', () => {\n\t\t\ttry {\n\t\t\t\tcx = new Context(this._rule)\n\t\t\t\tthis.onStart(cx)\n\t\t\t} catch (e) {\n\t\t\t\tio.emit('error', e)\n\t\t\t}\n\t\t})\n\t\tio.on('data', byte => {\n\t\t\ttry {\n\t\t\t\tthis._cm.feed(byte)\n\t\t\t} catch (e) {\n\t\t\t\tio.emit('error', e)\n\t\t\t}\n\t\t})\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tio.on('end', () => {\n\t\t\t\tthis.onComplete(cx)\n\t\t\t\tresolve(cx)\n\t\t\t})\n\t\t\tio.on('error', function (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t\tio.destroy()\n\t\t\t\treject(e)\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @param {Context} Cx The root context\n\t * @protected\n\t */\n\tonStart(Cx) {\n\t\tthis._cm = new ContextManager(Cx)\n\t\tCx.start()\n\t\tCx.updateState(true)\n\t}\n\n\t/**\n\t * @param {Context} Cx The finished context\n\t * @protected\n\t */\n\tonComplete(Cx) {\n\t\tCx.end()\n\t\tCx.updateState(true)\n\t\tCx.cleanupChildren(true)\n\t}\n}\n\nexport default Parser\n","import Parser from './Parser.js'\nimport Rule from './Rule.js'\n\n/**\n * The main API provider\n */\nclass Main {\n\t/**\n\t * Creates a Parser instance\n\t * @param {object|Rule} Rl The parsing rule definition\n\t * @return {Parser} A new Parser instance\n\t */\n\tcreate(Rl) {\n\t\treturn new Parser(Rl)\n\t}\n\t/**\n\t * Creates a Rule instance\n\t * @param {object} Df The rule definition\n\t * @return {Rule} A new Rule instance\n\t */\n\tnewRule(Df = null) {\n\t\treturn new Rule(Df)\n\t}\n}\n\nexport default new Main()\n"],"names":[],"mappings":"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AAK;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE;AACnC,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAC;AACzD,EAAE,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS;AACjC,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAC;AAC9C,EAAE,OAAO,CAAC;AACV,EAAE;AACF;;ACxYA,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,EAAC;AACjC;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,SAAS,SAAS,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,EAAE;AACxB,EAAE,KAAK,GAAE;AACT,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,GAAE;AAClB,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,IAAI,KAAI;AAC9B,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,KAAK,IAAI,KAAI;AAC1C,EAAE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"}